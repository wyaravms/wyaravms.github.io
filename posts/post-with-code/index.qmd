---
title: "Newton-Raphson's method for Weibull distribution"
author: "Wyara Silva"
date: "2023-02-25"
categories: [R, code, analysis, latex]
---

Soon I will modify this code to a cleaner one.

```{r}
rm(list=ls(all=TRUE))
set.seed(22)
library(ggplot2)

dados = readr::read_table("Dados_Weibull.txt", col_names = FALSE)

ggplot(dados, aes(x=X1)) + 
  geom_histogram(aes(y=..density..), bins = 30, color="black", fill="grey")+
  geom_density(alpha=.2, linetype = 2, fill="light blue") +
  labs(x="dados", y = "densidade")

newton.raphson.w = function(x.dados, alpha.0=10, precisao = 1e-7, n=100){
  
  dlogLikW = function(y){(length(x.dados)/y) + sum(log(x.dados)) - sum(log(x.dados)*(x.dados^y))}
  ddlogLikW = function(z){-(length(x.dados)/z^2) - sum((log(x.dados)^2)*(x.dados^z))}
  
  for (i in 1:n) {
    alpha.1 = alpha.0 - dlogLikW(alpha.0)/ddlogLikW(alpha.0)
    
    if(abs(alpha.1 - alpha.0) < precisao){
      res = list(alpha.1,i)
      names(res) = c("alpha.estimado","n.iter")
      return(res)
    }
    
    alpha.0 = alpha.1
  }
  print("com o número de iterações não houve convergência")
}

newton.raphson.w(dados)

#simulation
n = c(10,30,100,1000)

estimativas = array(NA, dim=c(1, length(n)))

for (i in 1:length(n)){
  dat =  rweibull(n[i], shape=5, scale=1)
  estimativas[,i] = newton.raphson.w(dat,2)$alpha.estimado
}

estimativas
```


