library(usethis)
use_git_config(user.name = "Wyara Silva", user.email = "wyaravms@gmail.com")
use_git_config(user.name = "Wyara Silva", user.email = "wyaravms@gmail.com")
install.packages("usethis")
install.packages("checklist",
repos = c(
inbo = "https://inbo.r-universe.dev",
CRAN = "https://cloud.r-project.org/")
)
View(gert::git_config_global())
gitcreds::gitcreds_set()
usethis::git_sitrep()
usethis::edit_r_environ()
usethis::edit_r_environ()
# To install the latest version
install.packages("gert", repos = c(
ropensci = 'https://ropensci.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
# To install the CRAN release:
install.packages("gert")
gitcreds::gitcreds_set()
usethis::git_sitrep()
use_git()
usethis::use_git()
usethis::use_github()
usethis::edit_r_environ()
usethis::gh_token_help()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
usethis::git_sitrep()
credentials::set_github_pat()
usethis::use_github()
1/3
1/4
sqrt(1/3)
sqrt(1/4)
Dados_Weibull <- read.table("C:/Users/Wyara Silva/Meu Drive/disciplina-isolada-ufmg-2022/inferencia-estatistica/trabalho-1/Dados_Weibull.txt", quote="\"", comment.char="")
View(Dados_Weibull)
View(Dados_Weibull)
setwd("~/personal-blog/posts/post-with-code")
setwd("C:\\Users\\Wyara Silva\\Meu Drive\\disciplina-isolada-ufmg-2022\\inferencia-estatistica\\trabalho-1")
setwd("C:/Users/Wyara Silva/Meu Drive/disciplina-isolada-ufmg-2022/inferencia-estatistica/trabalho-1")
git push --help
library(readr)
setwd("C:/Users/Wyara Silva/Meu Drive/disciplina-isolada-ufmg-2022/inferencia-estatistica/trabalho-1")
dados <- readr::read_rds("Dados_Weibull.txt")
?readr
readr::read_table("Dados_Weibull.txt")
readr::read_table("Dados_Weibull.txt", comment = "",)
readr::read_table("Dados_Weibull.txt", comment = "")
readr::read_table("Dados_Weibull.txt", col_names = FALSE)
setwd("C:/Users/Wyara Silva/Meu Drive/disciplina-isolada-ufmg-2022/inferencia-estatistica/trabalho-1")
rm(list=ls(all=TRUE))
set.seed(22)
dados.f = readr::read_table("Dados_Weibull.txt", col_names = FALSE)
library(ggplot2)
ggplot(dados.f, aes(x=X1)) +
geom_histogram(aes(y=..density..), bins = 30, color="black", fill="grey")+
geom_density(alpha=.2, linetype = 2, fill="light blue") +
labs(x="dados", y = "densidade")
newton.raphson.w = function(x.dados, alpha.0=10, precisao = 1e-7, n=100){
#primeira e segunda derivada da log-verossimilhança com relação a alpha
dlogLikW = function(y){(length(x.dados)/y) + sum(log(x.dados)) - sum(log(x.dados)*(x.dados^y))}
ddlogLikW = function(z){-(length(x.dados)/z^2) - sum((log(x.dados)^2)*(x.dados^z))}
for (i in 1:n) {
#equação de recorrência de newton-raphson
alpha.1 = alpha.0 - dlogLikW(alpha.0)/ddlogLikW(alpha.0)
#verificar se convergiu
if(abs(alpha.1 - alpha.0) < precisao){
res = list(alpha.1,i)
names(res) = c("alpha.estimado","n.iter")
return(res)
}
#nova iteração
alpha.0 = alpha.1
}
print("com o número de iterações não houve convergência")
}
newton.raphson.w(dados)
1/12
sqrt(1/12)
0.5*0.5
(1:10)*0.5*0.5
(10:20)*0.5*0.5
3/4
rm(list=ls(all=TRUE))
set.seed(22)
dados = readr::read_table("Dados_Weibull.txt", col_names = FALSE)
install.packages("here")
library(here)
here("inference", "Dados_Weibull.txt")
cat(readLines(here("inference", "Dados_Weibull.txt")))
dados = readr::read_table("Dados_Weibull.txt", col_names = FALSE)
rm(list=ls(all=TRUE))
set.seed(22)
here("inference", "Dados_Weibull.txt")
dados = readr::read_table("Dados_Weibull.txt", col_names = FALSE)
rm(list=ls(all=TRUE))
set.seed(22)
here::here("inference", "Dados_Weibull.txt")
dados = readr::read_table("Dados_Weibull.txt", col_names = FALSE)
ggplot2::ggplot(dados, aes(x=X1)) +
geom_histogram(aes(y=..density..), bins = 30, color="black", fill="grey")+
geom_density(alpha=.2, linetype = 2, fill="light blue") +
labs(x="dados", y = "densidade")
ggplot2::ggplot(dados) +
geom_histogram(aes(y=..density..), bins = 30, color="black", fill="grey")+
geom_density(alpha=.2, linetype = 2, fill="light blue") +
labs(x="dados", y = "densidade")
library(ggplot2)
ggplot(dados, aes(x=X1)) +
geom_histogram(aes(y=..density..), bins = 30, color="black", fill="grey")+
geom_density(alpha=.2, linetype = 2, fill="light blue") +
labs(x="dados", y = "densidade")
1/4
0.25*1.64
0.41/0.01
41^2
1-0.95
2/38
1/4
3/4
1/log(1:10)
1/log(10:10000)
1/log(12220000)
1/log(1)
1/log(1.1)
1/log(2)
1/log(1.0001)
