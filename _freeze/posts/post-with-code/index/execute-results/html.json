{
  "hash": "f755991e4a21566d71ad34910df0e996",
  "result": {
    "markdown": "---\ntitle: \"Newton-Raphson's method for Weibull distribution\"\nauthor: \"Wyara Silva\"\ndate: \"2023-02-25\"\ncategories: [R, code, analysis]\ntitle-block-banner: true\n---\n\n\nSoon I will modify this code to a cleaner one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls(all=TRUE))\nset.seed(22)\nlibrary(ggplot2)\n\ndados = readr::read_table(\"Dados_Weibull.txt\", col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double()\n)\n```\n:::\n\n```{.r .cell-code}\nggplot(dados, aes(x=X1)) + \n  geom_histogram(aes(y=..density..), bins = 30, color=\"black\", fill=\"grey\")+\n  geom_density(alpha=.2, linetype = 2, fill=\"light blue\") +\n  labs(x=\"dados\", y = \"densidade\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnewton.raphson.w = function(x.dados, alpha.0=10, precisao = 1e-7, n=100){\n  \n  dlogLikW = function(y){(length(x.dados)/y) + sum(log(x.dados)) - sum(log(x.dados)*(x.dados^y))}\n  ddlogLikW = function(z){-(length(x.dados)/z^2) - sum((log(x.dados)^2)*(x.dados^z))}\n  \n  for (i in 1:n) {\n    alpha.1 = alpha.0 - dlogLikW(alpha.0)/ddlogLikW(alpha.0)\n    \n    if(abs(alpha.1 - alpha.0) < precisao){\n      res = list(alpha.1,i)\n      names(res) = c(\"alpha.estimado\",\"n.iter\")\n      return(res)\n    }\n    \n    alpha.0 = alpha.1\n  }\n  print(\"com o número de iterações não houve convergência\")\n}\n\nnewton.raphson.w(dados)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$alpha.estimado\n[1] -0.3384617\n\n$n.iter\n[1] 9\n```\n:::\n\n```{.r .cell-code}\n#simulation\nn = c(10,30,100,1000)\n\nestimativas = array(NA, dim=c(1, length(n)))\n\nfor (i in 1:length(n)){\n  dat =  rweibull(n[i], shape=5, scale=1)\n  estimativas[,i] = newton.raphson.w(dat,2)$alpha.estimado\n}\n\nestimativas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         [,1]     [,2]     [,3]   [,4]\n[1,] 5.595741 4.692904 5.088293 5.0562\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}