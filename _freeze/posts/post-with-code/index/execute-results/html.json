{
  "hash": "b9a54b2276094234c2c534e2a80fb252",
  "result": {
    "markdown": "---\ntitle: \"Newton-Raphson's method for Weibull distribution\"\nauthor: \"Wyara Silva\"\nformat: \n  html:\n    fig-width: 7\n    fig-height: 5\ndate: \"2023-02-25\"\ncategories: [R, code, analysis]\ntitle-block-banner: true\n---\n\n\nObtaining the maximum likelihood estimate using the Newton-Raphson's method  for the alpha parameter for the Weibull distribution.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndados = readr::read_table(\"Dados_Weibull.txt\", col_names = FALSE)\n\nggplot(dados, aes(X1)) +\n  geom_histogram(aes(y=after_stat(density)), bins = 30, color=\"black\", fill=\"grey\")+\n  geom_density(alpha=.2, linetype = 2, fill=\"light blue\") +\n  labs(x=\"Data\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnewton.raphson.w = function(x.dados, alpha.0=10, precisao = 1e-7, n=100){\n  dlogLikW = function(y){(length(x.dados)/y) + sum(log(x.dados)) - sum(log(x.dados)*(x.dados^y))}\n  ddlogLikW = function(z){-(length(x.dados)/z^2) - sum((log(x.dados)^2)*(x.dados^z))}\n  for (i in 1:n) {\n    alpha.1 = alpha.0 - dlogLikW(alpha.0)/ddlogLikW(alpha.0)\n    if(abs(alpha.1 - alpha.0) < precisao){\n      res = list(alpha.1,i)\n      names(res) = c(\"alpha.estimated\",\"n.iter\")\n      return(res)\n    }\n    alpha.0 = alpha.1\n  }\n  print(\"with the number of iterations there was no convergence\")\n}\nnewton.raphson.w(dados$X1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$alpha.estimated\n[1] 4.965997\n\n$n.iter\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#simulation\nn = c(10,30,100,1000)\nestimativas = array(NA, dim=c(1, length(n)))\n\nfor (i in 1:length(n)){\n  dat =  rweibull(n[i], shape=5, scale=1)\n  estimativas[,i] = newton.raphson.w(dat,2)$alpha.estimated\n}\n\nestimativas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         [,1]     [,2]     [,3]     [,4]\n[1,] 6.277507 4.790705 4.738145 4.860729\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}